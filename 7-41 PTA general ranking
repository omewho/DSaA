#include <stdio.h>
#include <stdlib.h> 
#include <string.h>

#define MAXN 100
#define MAXK 300

struct stuInfo {
	char ID[14];
	int score;
	int venueID;
	int GNL_rank;
	int LCL_rank;
};

typedef struct stuInfo Stu;

Stu ALL[MAXN * MAXK];
int idx = 0;

int comp(const void *a, const void *b) {
	
	if( (*(Stu *)a).score == (*(Stu *)b).score ) return strcmp((*(Stu *)a).ID, (*(Stu *)b).ID );
	return (*(Stu *)b).score - (*(Stu *)a).score;
	
	//return *(int *)b - *(int *)a;
}

void printLCLArr(Stu *arr, int num) {
	for(int i = 0; i < num; i++) {
		printf("%s %d %d %d\n", arr[i].ID, arr[i].score, arr[i].venueID, arr[i].LCL_rank);
	}
}

void printGNLArr(Stu *arr, int num) {
	for(int i = 0; i < num; i++) {
		printf("%s %d %d %d\n", arr[i].ID, arr[i].GNL_rank, arr[i].venueID, arr[i].LCL_rank);
	}	
}

int main() {
	
	int n;
	scanf("%d", &n);
	
	int sum = 0;
	for(int v = 0; v < n; v++) {
		int num;
		scanf("%d\n", &num);
		sum += num;
		
		Stu students[num];
		
		for(int i = 0; i < num; i++) {
			scanf("%s %d", &students[i].ID, &students[i].score);
			students[i].venueID = v + 1;
			//scanf(%)
			//printf("%s %d\n", students[i].ID, students[i].score);
		}
		
		qsort(students, num, sizeof(Stu), comp);
		
		for(int i = 0; i < num; i++) {
			
			students[i].LCL_rank = i + 1;
			if(i != 0) {
				if( students[i].score == students[i - 1].score ) students[i].LCL_rank = students[i - 1].LCL_rank;
			}
			ALL[idx++] = students[i];
		}
		
		//printLCLArr(students, num);
		
	}
	
	qsort(ALL, idx, sizeof(Stu), comp);
	for(int i = 0; i < idx; i++) {
		
		ALL[i].GNL_rank = i + 1;
		if(i != 0) {
			if(ALL[i].score == ALL[i - 1].score) ALL[i].GNL_rank = ALL[i - 1].GNL_rank;
		}
		
	}
	
	printf("%d\n", sum);
	printGNLArr(ALL, idx);
	
	return 0;
}
