#include <stdio.h>
#include <stdlib.h>
#define MAX 10000

typedef int ElementType;
typedef int SetName;

ElementType S[MAX];

typedef ElementType * SetType;

void init() {
	
	int i;
	for(i = 0; i < MAX; i++) {
		S[i] = -1;
	}
}

void printArr(int *arr, int n) {
	for(int i = 0; i < n; i++) {
		if(i != 0) printf(" ");
		printf("%d", arr[i]);
	}
	printf("\n");
}

SetName Find(ElementType X) {
	if(S[X] < 0) return X;
	return S[X] = Find(S[X]);
}

void Union(SetName sn1, SetName sn2) {
	
	if(S[sn1] < S[sn2]) {
		S[sn1] += S[sn2];
		S[sn2] = sn1;
	}
	else {
		S[sn2] += S[sn1];
		S[sn1] = sn2;
	}
	//printf("Now sn1 is %d\n");
}

int FindMax(SetType S, int Size) {
	
	int m = -1;
	for(int i = 0; i < Size; i++) {
		if(S[i] < m) m = S[i];
	}
	return -m;
}

int main() {
	
	int n;
	scanf("%d\n", &n);
	
	init();
	//printArr(s, n);
	
	int mi;
	ElementType id1, id, max_id = -1;
	 
	for(int i = 0; i < n; i++) {
		scanf("%d%d", &mi, &id1);
		if(id1 > max_id) max_id = id1;
		//printf("%d %d\n", mi, id1);
		
		SetName sn1 = Find(id1 - 1);
		//printf("sn1 is %d\n", sn1);
		for(int j = 1; j < mi; j++) {
			scanf("%d", &id);
			if(id > max_id) max_id = id;
			//printf("id is %d\n", id);
			
			SetName sn2 = Find(id - 1);
			//printf("sn2 is %d\n", sn2);
			
			if(sn2 != sn1) {
				Union(sn1, sn2);
				sn1 = Find(sn1);
				sn2 = Find(sn2);
				//printf("Now, sn1 belongs to %d, sn2 belongs to %d\n", sn1, sn2);
			}
		}
	}
	
	int total = max_id, count = 0;
	for(int id = 0; id < max_id; id++) {
		if(S[id] < 0) count++;
	}
	printf("%d %d\n", total, count);
	
	int Q;
	scanf("%d", &Q);
	SetName q1, q2;
	for(int i = 0; i < Q; i++) {
		scanf("%d%d", &q1, &q2);
		SetName sn1 = Find(q1 - 1);
		SetName sn2 = Find(q2 - 1);
		
		if(sn1 == sn2) printf("Y\n");
		else printf("N\n");
	}
	
	
	
	 
	return 0;
}
