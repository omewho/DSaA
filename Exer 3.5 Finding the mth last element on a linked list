#include <stdio.h>
#include <stdlib.h>

#define ERROR -1

typedef int ElementType;
typedef struct Node *PtrToNode;
struct Node {
    ElementType Data;
    PtrToNode   Next;
};
typedef PtrToNode List;

List Read() {
	PtrToNode head = (PtrToNode)malloc(sizeof(struct Node)), tail;
	head->Next = NULL;
	
	int n;
	scanf("%d", &n);
	
	for(int i = 0; i < n; i++) {
		PtrToNode node = (PtrToNode)malloc(sizeof(struct Node));
		scanf("%d", &node->Data);
		node->Next = NULL;
		
		if(!(head->Next)) head->Next = node;
		else tail->Next = node;
		
		tail = node;
	}
	return head;
} /* 细节在此不表 */
void Print( List L ) {
	
	PtrToNode node = L->Next;
	int first = 1;
	while(node) {
		if(first) first = 0;
		else printf(" ");
		printf("%d", node->Data);
		
		node = node->Next;
	}
	printf("\n");
} /* 细节在此不表 */

ElementType Find( List L, int m );

int main()
{
    List L;
    int m;
    L = Read();
    Print(L);
    
    scanf("%d", &m);
    printf("%d\n", Find(L,m));
    Print(L);
    return 0;
}

ElementType Find( List L, int m ) {
	
	ElementType rtn = ERROR;
	
	int n = 1;
	PtrToNode p, q;
	p = q = L->Next;
	
	while(p && n < m) {
		p = p->Next;
		n++;
	}
	//printf("p is now %d\n", p->Data);
	
	if(n == m) {
		while(p->Next) {
			p = p->Next;
			q = q->Next;
		}
		rtn = q->Data;
	}
	
	return rtn;
}
