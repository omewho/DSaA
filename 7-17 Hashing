#include <stdio.h>
#include <math.h>

typedef int ElementType;
typedef enum{false, true} bool;

int Hash(ElementType Key, int TableSize) {
	
	return Key % TableSize;
}

bool occupied[10007];

bool isPrime(int n) {
	
	if(n < 2) return false;
	
	if(n > 2) {
		for(int i = 2; i <= (int)sqrt(n); i++) {
			if( n % i == 0) return false;
		}
	}
	
	return true;
}

int getNextPrime(int num) {
	
	while(!isPrime(num)) num++;
	return num;
}

int main() {
	
	int m, n;
	scanf("%d%d", &m, &n);
	
	int num, tablesize = getNextPrime(m);
	
	for(int i = 0; i < n; i++) {
		scanf("%d", &num);
		
		int pos = -1, assumed_pos = Hash(num, tablesize);
		
		for(int j = 0;  assumed_pos + j * j < tablesize * tablesize ;j++) {
			
			if( !occupied[ ( assumed_pos + j * j) % tablesize] ) {
				pos = (assumed_pos + j * j) % tablesize;
				occupied[pos] = true;
				break;
			}
		}
		
		if(i) printf(" ");
		if(pos == -1) printf("-");
		else printf("%d", pos);
			
	}
	printf("\n");
	return 0;
}
