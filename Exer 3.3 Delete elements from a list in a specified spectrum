#include <stdio.h>
#include <stdlib.h>

#define MAXSIZE 20
typedef int ElementType;

typedef int Position;
typedef struct LNode *List;
struct LNode {
    ElementType Data[MAXSIZE];
    Position Last; 
};

List ReadInput() {
	List L = (List)malloc(sizeof(struct LNode));
	L->Last = -1;
	
	int n, num;
	scanf("%d", &n);
	
	for(int i = 0; i < n; i++) {
		
		scanf("%d", &num);
		L->Data[++(L->Last)] = num;
	}
	return L;
}

void PrintList( List L ) {
	for(int i = 0; i <= L->Last; i++) {
		if(i != 0) printf(" ");
		printf("%d", L->Data[i]);
	}
	printf("\n");
}

List Delete( List L, ElementType minD, ElementType maxD );

int main()
{
    List L;
    ElementType minD, maxD;
    int i;

    L = ReadInput();
    PrintList( L );
    scanf("%d %d", &minD, &maxD);
    L = Delete( L, minD, maxD );
    PrintList( L );

    return 0;
}

List Delete( List L, ElementType minD, ElementType maxD ) {
	
	Position p = 0, q;
	while( !(L->Data[p] > minD && L->Data[p] < maxD)  && p <= L->Last ) p++;
	printf("%d\n", p);
	
	for(q = p + 1; q <= L->Last; q++) {
		if(!(L->Data[q] > minD && L->Data[q] < maxD)) {
			L->Data[p] = L->Data[q];
			p++;
		}
	}
	L->Last = p - 1;
	
	return L;
}
